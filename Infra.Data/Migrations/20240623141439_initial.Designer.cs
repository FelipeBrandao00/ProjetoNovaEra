// <auto-generated />
using System;
using API_NOVA_ERA.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infra.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240623141439_initial")]
    partial class initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Domain.Entities.Aluno", b =>
                {
                    b.Property<Guid>("cdAluno")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("dsCPFAluno")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<int>("dsGenero")
                        .HasColumnType("int");

                    b.Property<DateTime>("dtNascimentoAluno")
                        .HasColumnType("datetime2");

                    b.Property<string>("nmAluno")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("cdAluno");

                    b.ToTable("Alunos");
                });

            modelBuilder.Entity("Domain.Entities.Aula", b =>
                {
                    b.Property<int>("cdAula")
                        .HasColumnType("int");

                    b.Property<int>("cdTurma")
                        .HasColumnType("int");

                    b.Property<DateTime>("dtAula")
                        .HasColumnType("datetime2");

                    b.HasKey("cdAula", "cdTurma");

                    b.HasIndex("cdTurma");

                    b.ToTable("Aulas");
                });

            modelBuilder.Entity("Domain.Entities.Certificado", b =>
                {
                    b.Property<int>("cdCertificado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("cdCertificado"));

                    b.Property<int>("cdTurma")
                        .HasColumnType("int");

                    b.Property<int>("dsExtensao")
                        .HasColumnType("int");

                    b.Property<string>("nmArquivo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("cdCertificado");

                    b.HasIndex("cdTurma")
                        .IsUnique();

                    b.ToTable("Certificados");
                });

            modelBuilder.Entity("Domain.Entities.Conteudo", b =>
                {
                    b.Property<int>("cdConteudo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("cdConteudo"));

                    b.Property<int>("cdAula")
                        .HasColumnType("int");

                    b.Property<int>("cdTurma")
                        .HasColumnType("int");

                    b.Property<string>("dsConteudo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("dsExtencao")
                        .HasColumnType("int");

                    b.Property<string>("nmArquivo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("cdConteudo");

                    b.HasIndex("cdAula", "cdTurma");

                    b.ToTable("Conteudos");
                });

            modelBuilder.Entity("Domain.Entities.Curso", b =>
                {
                    b.Property<int>("cdCurso")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("cdCurso"));

                    b.Property<string>("dsCurso")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("dtCriacao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("dtFinalizacao")
                        .HasColumnType("datetime2");

                    b.Property<string>("nmCurso")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("qtHoras")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("cdCurso");

                    b.ToTable("Cursos");
                });

            modelBuilder.Entity("Domain.Entities.Frequencia", b =>
                {
                    b.Property<int>("cdAula")
                        .HasColumnType("int");

                    b.Property<int>("cdTurma")
                        .HasColumnType("int");

                    b.Property<Guid>("cdAluno")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("cdAula", "cdTurma", "cdAluno");

                    b.HasIndex("cdAluno");

                    b.ToTable("Frequencias");
                });

            modelBuilder.Entity("Domain.Entities.Professor", b =>
                {
                    b.Property<Guid>("cdProfessor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("dsCPFProfessor")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<string>("dsEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("dsGenero")
                        .HasColumnType("int");

                    b.Property<bool>("icHabilitadoTurma")
                        .HasColumnType("bit");

                    b.Property<string>("nmProfessor")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("cdProfessor");

                    b.ToTable("Professores");
                });

            modelBuilder.Entity("Domain.Entities.Turma", b =>
                {
                    b.Property<int>("cdTurma")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("cdTurma"));

                    b.Property<int>("cdCurso")
                        .HasColumnType("int");

                    b.Property<Guid>("cdProfessor")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("dtFim")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("dtInicio")
                        .HasColumnType("datetime2");

                    b.HasKey("cdTurma");

                    b.HasIndex("cdCurso");

                    b.HasIndex("cdProfessor");

                    b.ToTable("Turmas");
                });

            modelBuilder.Entity("Domain.Entities.Turma_Aluno", b =>
                {
                    b.Property<int>("cdTurma")
                        .HasColumnType("int");

                    b.Property<Guid>("cdAluno")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("cdTurma", "cdAluno");

                    b.HasIndex("cdAluno");

                    b.ToTable("Turma_Alunos");
                });

            modelBuilder.Entity("Domain.Entities.Aula", b =>
                {
                    b.HasOne("Domain.Entities.Turma", "Turma")
                        .WithMany("Aulas")
                        .HasForeignKey("cdTurma")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Turma");
                });

            modelBuilder.Entity("Domain.Entities.Certificado", b =>
                {
                    b.HasOne("Domain.Entities.Turma", "Turma")
                        .WithOne("Certificado")
                        .HasForeignKey("Domain.Entities.Certificado", "cdTurma")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Turma");
                });

            modelBuilder.Entity("Domain.Entities.Conteudo", b =>
                {
                    b.HasOne("Domain.Entities.Aula", "Aula")
                        .WithMany("Conteudos")
                        .HasForeignKey("cdAula", "cdTurma")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Aula");
                });

            modelBuilder.Entity("Domain.Entities.Frequencia", b =>
                {
                    b.HasOne("Domain.Entities.Aluno", "Aluno")
                        .WithMany("Frequencia")
                        .HasForeignKey("cdAluno")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Aula", "Aula")
                        .WithMany("Frequencia")
                        .HasForeignKey("cdAula", "cdTurma")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Aluno");

                    b.Navigation("Aula");
                });

            modelBuilder.Entity("Domain.Entities.Turma", b =>
                {
                    b.HasOne("Domain.Entities.Curso", "Curso")
                        .WithMany("Turmas")
                        .HasForeignKey("cdCurso")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Professor", "Professor")
                        .WithMany("Turmas")
                        .HasForeignKey("cdProfessor")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Curso");

                    b.Navigation("Professor");
                });

            modelBuilder.Entity("Domain.Entities.Turma_Aluno", b =>
                {
                    b.HasOne("Domain.Entities.Aluno", "Aluno")
                        .WithMany("TurmaAluno")
                        .HasForeignKey("cdAluno")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Turma", "Turma")
                        .WithMany("TurmaAluno")
                        .HasForeignKey("cdTurma")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Aluno");

                    b.Navigation("Turma");
                });

            modelBuilder.Entity("Domain.Entities.Aluno", b =>
                {
                    b.Navigation("Frequencia");

                    b.Navigation("TurmaAluno");
                });

            modelBuilder.Entity("Domain.Entities.Aula", b =>
                {
                    b.Navigation("Conteudos");

                    b.Navigation("Frequencia");
                });

            modelBuilder.Entity("Domain.Entities.Curso", b =>
                {
                    b.Navigation("Turmas");
                });

            modelBuilder.Entity("Domain.Entities.Professor", b =>
                {
                    b.Navigation("Turmas");
                });

            modelBuilder.Entity("Domain.Entities.Turma", b =>
                {
                    b.Navigation("Aulas");

                    b.Navigation("Certificado")
                        .IsRequired();

                    b.Navigation("TurmaAluno");
                });
#pragma warning restore 612, 618
        }
    }
}
